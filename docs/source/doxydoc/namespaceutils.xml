<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceutils" kind="namespace" language="C++">
    <compoundname>utils</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceutils_1a2cced40efe2ba8dfd91ab631c8e19bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double utils::what_time_is_it_now</definition>
        <argsstring>()</argsstring>
        <name>what_time_is_it_now</name>
        <briefdescription>
<para>Return the current time (OpenMP format). </para>
        </briefdescription>
        <detaileddescription>
<para>There are many specialization of this function according to different parallel environments.</para>
<para><simplesect kind="return"><para>The current time as double value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Desktop/Code/plasticity/include/utils.h" line="94" column="10" declfile="/home/nico/Desktop/Code/plasticity/include/utils.h" declline="94" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutils_1aee4b1108131ca374f4c4cf42f1a625c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Time</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double utils::elapsed_time</definition>
        <argsstring>(const Time &amp;start_time)</argsstring>
        <name>elapsed_time</name>
        <param>
          <type>const Time &amp;</type>
          <declname>start_time</declname>
        </param>
        <briefdescription>
<para>Get the elapsed time from the start. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is related to the what_time_is_it_now function and thus its templates must be set according to the output of the what_time_is_it_now function.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer type returned by the what_time_is_it_now function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Start time.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The elapsed time as double. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Desktop/Code/plasticity/include/utils.h" line="135" column="10" declfile="/home/nico/Desktop/Code/plasticity/include/utils.h" declline="135" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutils_1aaab5e88355f4e1485387e3d16a1dc9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Time</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void utils::print_progress</definition>
        <argsstring>(const int &amp;i, const int &amp;num_batches, Time &amp;timer)</argsstring>
        <name>print_progress</name>
        <param>
          <type>const int &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>num_batches</declname>
        </param>
        <param>
          <type>Time &amp;</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Print progress bar. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used to progressively print a progress bar with timer.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Time</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer type returned by the what_time_is_it_now function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Current iteration value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_batches</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of iterations, i.e the width of the progress bar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Start time (the timer is reset at the end of the function). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Desktop/Code/plasticity/include/utils.h" line="150" column="8" declfile="/home/nico/Desktop/Code/plasticity/include/utils.h" declline="150" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutils_1ab7a2cde9dc8fa709dcffc0dd2056d892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool utils::file_exists</definition>
        <argsstring>(const std ::string &amp;filename)</argsstring>
        <name>file_exists</name>
        <param>
          <type>const std ::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Check if the given file exists. </para>
        </briefdescription>
        <detaileddescription>
<para>This function tries to open the given file (portable solution) and return true/false according to the outcome of this action.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename or path to check.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the file exists. False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nico/Desktop/Code/plasticity/include/utils.h" line="165" column="8" declfile="/home/nico/Desktop/Code/plasticity/include/utils.h" declline="165" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/nico/Desktop/Code/plasticity/include/utils.h" line="80" column="1"/>
  </compounddef>
</doxygen>

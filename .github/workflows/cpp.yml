name: plasticity C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ubuntu-cmake:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v2

    - name: 'Update apt'
      run: sudo apt update
    - name: 'Install CMake'
      run: sudo apt install cmake
    - name: 'Install Eigen3'
      run: sudo apt install libeigen3-dev

    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 'Configure build'
      run: |
        mkdir buildDirectory_debug
        cd buildDirectory_debug
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Debug" -DOMP=OFF -DPYWRAP=OFF
        cd ..
        mkdir buildDirectory_release
        cd buildDirectory_release
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Release" -DOMP=OFF -DPYWRAP=OFF
        cd ..
    - name: 'Build'
      run: |
        cd buildDirectory_debug
        cmake --build . --target install -- -j8
        cd ..
        cd buildDirectory_release
        cmake --build . --target install -- -j8
        cd ..



  ubuntu-cmake-omp:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v2

    - name: 'Update apt'
      run: sudo apt update
    - name: 'Install CMake'
      run: sudo apt install cmake
    - name: 'Install Eigen3'
      run: sudo apt install libeigen3-dev

    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 'Configure build'
      run: |
        mkdir buildDirectory_debug
        cd buildDirectory_debug
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Debug" -DOMP=ON -DPYWRAP=OFF
        cd ..
        mkdir buildDirectory_release
        cd buildDirectory_release
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Release" -DOMP=ON -DPYWRAP=OFF
        cd ..
    - name: 'Build'
      run: |
        cd buildDirectory_debug
        cmake --build . --target install -- -j8
        cd ..
        cd buildDirectory_release
        cmake --build . --target install -- -j8
        cd ..



  ubuntu-cmake-omp-cython:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v2

    - name: 'Update apt'
      run: sudo apt update
    - name: 'Install CMake'
      run: sudo apt install cmake
    - name: 'Install Eigen3'
      run: sudo apt install libeigen3-dev

    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 'Configure build'
      run: |
        mkdir buildDirectory_debug
        cd buildDirectory_debug
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Debug" -DOMP=ON -DPYWRAP=ON
        cd ..
        mkdir buildDirectory_release
        cd buildDirectory_release
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Release" -DOMP=ON -DPYWRAP=ON
        cd ..
    - name: 'Build'
      run: |
        cd buildDirectory_debug
        cmake --build . --target install -- -j8
        cd ..
        cd buildDirectory_release
        cmake --build . --target install -- -j8
        cd ..

  osx-cmake:
    runs-on: macOS-latest

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v2

    - name: 'Update apt'
      run: brew update
    - name: 'Install Eigen3'
      run: brew install eigen

    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 'Configure build'
      run: |
        mkdir buildDirectory_debug
        cd buildDirectory_debug
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Debug" -DOMP=OFF -DPYWRAP=OFF
        cd ..
        mkdir buildDirectory_release
        cd buildDirectory_release
        cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE="Release" -DOMP=OFF -DPYWRAP=OFF
        cd ..
    - name: 'Build'
      run: |
        cd buildDirectory_debug
        cmake --build . --target install -- -j8
        cd ..
        cd buildDirectory_release
        cmake --build . --target install -- -j8
        cd ..
